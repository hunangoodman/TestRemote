<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.treasure.dao.WithdrawMapper">
	<resultMap id="BaseResultMap" type="com.treasure.model.Withdraw">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="member_id" property="memberId" jdbcType="BIGINT" />
		<result column="amount" property="amount" jdbcType="DOUBLE" />
		<result column="card_number" property="cardNumber" jdbcType="VARCHAR" />
		<result column="procedure_rates" property="procedureRates"
			jdbcType="DOUBLE" />
		<result column="procedure_money" property="procedureMoney"
			jdbcType="DOUBLE" />
		<result column="reality_money" property="realityMoney"
			jdbcType="DOUBLE" />
		<result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
		<result column="check_status" property="checkStatus" jdbcType="TINYINT" />
		<result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap type="com.treasure.model.Withdraw" id="WithdrawResultMap"
		extends="BaseResultMap">
		<result column="fullName" property="fullName" jdbcType="VARCHAR" />
		<result column="cardNumber1" property="cardNumber1" jdbcType="VARCHAR" />
		<result column="bank" property="bank" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, member_id, amount, card_number, procedure_rates,
		procedure_money,
		reality_money,
		apply_time, check_status, check_time,
		remark
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.treasure.model.WithdrawExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from treasure_withdraw
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from treasure_withdraw
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		treasure_withdraw
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.treasure.model.WithdrawExample">
		delete from treasure_withdraw
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.treasure.model.Withdraw">
		insert into treasure_withdraw
		(id, member_id, amount,
		card_number, procedure_rates, procedure_money,
		reality_money, apply_time, check_status,
		check_time, remark)
		values
		(#{id,jdbcType=BIGINT}, #{memberId,jdbcType=BIGINT},
		#{amount,jdbcType=DOUBLE},
		#{cardNumber,jdbcType=VARCHAR},
		#{procedureRates,jdbcType=DOUBLE}, #{procedureMoney,jdbcType=DOUBLE},
		#{realityMoney,jdbcType=DOUBLE}, #{applyTime,jdbcType=TIMESTAMP},
		#{checkStatus,jdbcType=TINYINT},
		#{checkTime,jdbcType=TIMESTAMP},
		#{remark,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.treasure.model.Withdraw">
		insert into treasure_withdraw
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="memberId != null">
				member_id,
			</if>
			<if test="amount != null">
				amount,
			</if>
			<if test="cardNumber != null">
				card_number,
			</if>
			<if test="procedureRates != null">
				procedure_rates,
			</if>
			<if test="procedureMoney != null">
				procedure_money,
			</if>
			<if test="realityMoney != null">
				reality_money,
			</if>
			<if test="applyTime != null">
				apply_time,
			</if>
			<if test="checkStatus != null">
				check_status,
			</if>
			<if test="checkTime != null">
				check_time,
			</if>
			<if test="remark != null">
				remark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="memberId != null">
				#{memberId,jdbcType=BIGINT},
			</if>
			<if test="amount != null">
				#{amount,jdbcType=DOUBLE},
			</if>
			<if test="cardNumber != null">
				#{cardNumber,jdbcType=VARCHAR},
			</if>
			<if test="procedureRates != null">
				#{procedureRates,jdbcType=DOUBLE},
			</if>
			<if test="procedureMoney != null">
				#{procedureMoney,jdbcType=DOUBLE},
			</if>
			<if test="realityMoney != null">
				#{realityMoney,jdbcType=DOUBLE},
			</if>
			<if test="applyTime != null">
				#{applyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="checkStatus != null">
				#{checkStatus,jdbcType=TINYINT},
			</if>
			<if test="checkTime != null">
				#{checkTime,jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.treasure.model.WithdrawExample"
		resultType="java.lang.Integer">
		select count(*) from treasure_withdraw
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update treasure_withdraw
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.memberId != null">
				member_id = #{record.memberId,jdbcType=BIGINT},
			</if>
			<if test="record.amount != null">
				amount = #{record.amount,jdbcType=DOUBLE},
			</if>
			<if test="record.cardNumber != null">
				card_number = #{record.cardNumber,jdbcType=VARCHAR},
			</if>
			<if test="record.procedureRates != null">
				procedure_rates =
				#{record.procedureRates,jdbcType=DOUBLE},
			</if>
			<if test="record.procedureMoney != null">
				procedure_money =
				#{record.procedureMoney,jdbcType=DOUBLE},
			</if>
			<if test="record.realityMoney != null">
				reality_money = #{record.realityMoney,jdbcType=DOUBLE},
			</if>
			<if test="record.applyTime != null">
				apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.checkStatus != null">
				check_status = #{record.checkStatus,jdbcType=TINYINT},
			</if>
			<if test="record.checkTime != null">
				check_time = #{record.checkTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update treasure_withdraw
		set id = #{record.id,jdbcType=BIGINT},
		member_id = #{record.memberId,jdbcType=BIGINT},
		amount =
		#{record.amount,jdbcType=DOUBLE},
		card_number =
		#{record.cardNumber,jdbcType=VARCHAR},
		procedure_rates =
		#{record.procedureRates,jdbcType=DOUBLE},
		procedure_money =
		#{record.procedureMoney,jdbcType=DOUBLE},
		reality_money =
		#{record.realityMoney,jdbcType=DOUBLE},
		apply_time =
		#{record.applyTime,jdbcType=TIMESTAMP},
		check_status =
		#{record.checkStatus,jdbcType=TINYINT},
		check_time =
		#{record.checkTime,jdbcType=TIMESTAMP},
		remark =
		#{record.remark,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.treasure.model.Withdraw">
		update treasure_withdraw
		<set>
			<if test="memberId != null">
				member_id = #{memberId,jdbcType=BIGINT},
			</if>
			<if test="amount != null">
				amount = #{amount,jdbcType=DOUBLE},
			</if>
			<if test="cardNumber != null">
				card_number = #{cardNumber,jdbcType=VARCHAR},
			</if>
			<if test="procedureRates != null">
				procedure_rates = #{procedureRates,jdbcType=DOUBLE},
			</if>
			<if test="procedureMoney != null">
				procedure_money = #{procedureMoney,jdbcType=DOUBLE},
			</if>
			<if test="realityMoney != null">
				reality_money = #{realityMoney,jdbcType=DOUBLE},
			</if>
			<if test="applyTime != null">
				apply_time = #{applyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="checkStatus != null">
				check_status = #{checkStatus,jdbcType=TINYINT},
			</if>
			<if test="checkTime != null">
				check_time = #{checkTime,jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.treasure.model.Withdraw">
		update
		treasure_withdraw
		set member_id = #{memberId,jdbcType=BIGINT},
		amount =
		#{amount,jdbcType=DOUBLE},
		card_number =
		#{cardNumber,jdbcType=VARCHAR},
		procedure_rates =
		#{procedureRates,jdbcType=DOUBLE},
		procedure_money =
		#{procedureMoney,jdbcType=DOUBLE},
		reality_money =
		#{realityMoney,jdbcType=DOUBLE},
		apply_time =
		#{applyTime,jdbcType=TIMESTAMP},
		check_status =
		#{checkStatus,jdbcType=TINYINT},
		check_time =
		#{checkTime,jdbcType=TIMESTAMP},
		remark = #{remark,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<!-- 查询所有记录条数 -->
	<select id="selectCount" resultType="java.lang.Integer">
		select count(w.id) from treasure_withdraw w,treasure_member m where
		m.id=w.member_id
		<if test="record !=null"><!-- 判断对象是否为空 -->
			<if test="record.memberId != null and record.memberId !=''">
				and w.member_id =#{record.memberId,jdbcType=BIGINT}
			</if>
			<if test="record.mobile != null and record.mobile !=''">
				and m.mobile like "%"#{record.mobile,jdbcType=VARCHAR}"%"
			</if>
			<if test="record.cardNumber != null and record.cardNumber !=''">
				and w.card_number like
				"%"#{record.cardNumber,jdbcType=VARCHAR}"%"
			</if>
			<if test="record.checkStatus != null">
				and w.check_status =
				#{record.checkStatus,jdbcType=TINYINT}
			</if>
		</if>
	</select>
	<!-- 查询所有记录 -->
	<select id="selectList" resultMap="WithdrawResultMap">
		select w.*,m.full_name as fullName,m.mobile as mobile,m.card_number as
		cardNumber1,m.bank as bank from
		treasure_withdraw w,treasure_member m
		where m.id=w.member_id
		<if test="record !=null"><!-- 判断对象是否为空 -->
			<if test="record.memberId != null and record.memberId !=''">
				and w.member_id =#{record.memberId,jdbcType=BIGINT}
			</if>
			<if test="record.mobile != null and record.mobile !=''">
				and m.mobile like "%"#{record.mobile,jdbcType=VARCHAR}"%"
			</if>
			<if test="record.cardNumber != null and record.cardNumber !=''">
				and w.card_number like
				"%"#{record.cardNumber,jdbcType=VARCHAR}"%"
			</if>
			<if test="record.checkStatus != null">
				and w.check_status =
				#{record.checkStatus,jdbcType=TINYINT}
			</if>
		</if>
		<if test="pageInfo !=null"><!-- 判断pageInfo对象是否为空 -->
			<if test="pageInfo.sortField !=null  and pageInfo.sortOrder !=null">
				order by
				${pageInfo.sortField} ${pageInfo.sortOrder}
			</if>
			<if test="pageInfo.pageIndex >=0  and pageInfo.pageSize >0">
				limit
				#{pageInfo.pageIndex,jdbcType=INTEGER},#{pageInfo.pageSize,jdbcType=INTEGER}
			</if>
		</if>
	</select>
	<select id="selectByKey" resultMap="WithdrawResultMap">
		select w.*,m.full_name as
		fullName,m.mobile as mobile from
		treasure_withdraw w,treasure_member m
		where m.id=w.member_id
		and w.id=#{id,jdbcType=BIGINT}
	</select>
</mapper>