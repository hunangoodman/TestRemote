<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.treasure.dao.UserRoleMapper">
	<resultMap id="BaseResultMap" type="com.treasure.model.UserRole">
		<id column="user_role_id" property="userRoleId" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="role_id" property="roleId" jdbcType="BIGINT" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		user_role_id, user_id, role_id
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.treasure.model.UserRoleExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from btools_user_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from btools_user_role
		where user_role_id =
		#{userRoleId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		btools_user_role
		where user_role_id = #{userRoleId,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.treasure.model.UserRoleExample">
		delete from btools_user_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.treasure.model.UserRole">
		insert into btools_user_role
		(user_role_id, user_id, role_id
		)
		values (#{userRoleId,jdbcType=BIGINT},
		#{userId,jdbcType=BIGINT},
		#{roleId,jdbcType=BIGINT}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.treasure.model.UserRole">
		insert into btools_user_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userRoleId != null">
				user_role_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userRoleId != null">
				#{userRoleId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.treasure.model.UserRoleExample"
		resultType="java.lang.Integer">
		select count(*) from btools_user_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update btools_user_role
		<set>
			<if test="record.userRoleId != null">
				user_role_id = #{record.userRoleId,jdbcType=BIGINT},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=BIGINT},
			</if>
			<if test="record.roleId != null">
				role_id = #{record.roleId,jdbcType=BIGINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update btools_user_role
		set user_role_id =
		#{record.userRoleId,jdbcType=BIGINT},
		user_id =
		#{record.userId,jdbcType=BIGINT},
		role_id =
		#{record.roleId,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.treasure.model.UserRole">
		update btools_user_role
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=BIGINT},
			</if>
		</set>
		where user_role_id = #{userRoleId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.treasure.model.UserRole">
		update
		btools_user_role
		set user_id = #{userId,jdbcType=BIGINT},
		role_id =
		#{roleId,jdbcType=BIGINT}
		where user_role_id =
		#{userRoleId,jdbcType=BIGINT}
	</update>
	<!-- 根据角色编号，先删除已分配资源 -->
	<delete id="deleteByUserId" parameterType="java.lang.Integer">
		delete from
		btools_user_role
		where user_id=#{userId,jdbcType=INTEGER}
	</delete>
	<!-- 批量插入 -->
	<insert id="insertList">
		insert into btools_user_role
		(user_id, role_id)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			( #{item.userId,jdbcType=BIGINT},
			#{item.roleId,jdbcType=BIGINT})
		</foreach>
	</insert>
	<delete id="deleteUserRoleByKey" parameterType="java.util.List">
		delete from btools_user_role where user_id in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>
	<select id="selectRoleIdsByKey" resultType="java.lang.String">
		select
		group_concat(DISTINCT role_id SEPARATOR ',') from btools_user_role
		where user_id=#{nid,jdbcType=BIGINT}
	</select>
	<select id="selectRoleNamesByKey" resultType="java.lang.String">
		select
		group_concat(DISTINCT r.role_name SEPARATOR ',') from
		btools_user_role
		ur,btools_role r where ur.role_id=r.role_id and
		user_id=#{nid,jdbcType=BIGINT}
	</select>
</mapper>