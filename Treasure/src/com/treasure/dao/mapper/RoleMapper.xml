<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.treasure.dao.RoleMapper">
	<resultMap id="BaseResultMap" type="com.treasure.model.Role">
		<id column="role_id" property="roleId" jdbcType="BIGINT" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="company_id" property="companyId" jdbcType="BIGINT" />
		<result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
		<result column="description" property="description" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="RoleResultMap" type="com.treasure.model.Role"
		extends="BaseResultMap">
		<collection property="userlist" select="selectUserByRoleId"
			column="role_id" ofType="com.treasure.model.User"></collection>
	</resultMap>
	<resultMap id="UserResultMap" type="com.treasure.model.User">
		<id column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="job_no" property="jobNo" jdbcType="VARCHAR" />
		<result column="full_name" property="fullName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="user_type" property="userType" jdbcType="INTEGER" />
		<result column="parent_id" property="parentId" jdbcType="BIGINT" />
		<result column="company_id" property="companyId" jdbcType="BIGINT" />
		<result column="mobile_phone" property="mobilePhone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="description" property="description" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		role_id, role_name, company_id, add_time, description
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.treasure.model.RoleExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from btools_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from btools_role
		where role_id = #{roleId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		btools_role
		where role_id = #{roleId,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.treasure.model.RoleExample">
		delete from btools_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.treasure.model.Role"
		useGeneratedKeys="true" keyProperty="roleId">
		insert into btools_role
		(role_id,
		role_name, company_id,
		add_time, description)
		values
		(#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR},
		#{companyId,jdbcType=BIGINT},
		#{addTime,jdbcType=TIMESTAMP},
		#{description,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.treasure.model.Role"
		useGeneratedKeys="true" keyProperty="roleId">
		insert into btools_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="companyId != null">
				company_id,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
			<if test="description != null">
				description,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=BIGINT},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="companyId != null">
				#{companyId,jdbcType=BIGINT},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.treasure.model.RoleExample"
		resultType="java.lang.Integer">
		select count(*) from btools_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update btools_role
		<set>
			<if test="record.roleId != null">
				role_id = #{record.roleId,jdbcType=BIGINT},
			</if>
			<if test="record.roleName != null">
				role_name = #{record.roleName,jdbcType=VARCHAR},
			</if>
			<if test="record.companyId != null">
				company_id = #{record.companyId,jdbcType=BIGINT},
			</if>
			<if test="record.addTime != null">
				add_time = #{record.addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.description != null">
				description = #{record.description,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update btools_role
		set role_id = #{record.roleId,jdbcType=BIGINT},
		role_name = #{record.roleName,jdbcType=VARCHAR},
		company_id =
		#{record.companyId,jdbcType=BIGINT},
		add_time =
		#{record.addTime,jdbcType=TIMESTAMP},
		description =
		#{record.description,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.treasure.model.Role">
		update btools_role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="companyId != null">
				company_id = #{companyId,jdbcType=BIGINT},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.treasure.model.Role">
		update
		btools_role
		set role_name = #{roleName,jdbcType=VARCHAR},
		company_id =
		#{companyId,jdbcType=BIGINT},
		add_time =
		#{addTime,jdbcType=TIMESTAMP},
		description =
		#{description,jdbcType=VARCHAR}
		where role_id =
		#{roleId,jdbcType=BIGINT}
	</update>
	<!-- 查询所有记录条数 -->
	<select id="selectTotalRecord" resultType="java.lang.Integer">
		select count(role_id) from btools_role where 1=1
		<if test="role !=null"><!-- 判断对象是否为空 -->
			<if test="role.roleName != null and role.roleName !='' ">
				and role_name like
				"%"#{role.roleName,jdbcType=VARCHAR}"%"
			</if>
			<if test="role.companyId != null">
				<if test="role.companyId ==0">
					and company_id =0
				</if>
				<if test="role.companyId !=0">
					and (company_id =0 or
					company_id =
					#{role.companyId,jdbcType=BIGINT})
				</if>
			</if>
		</if>
	</select>
	<!-- 查询所有记录 -->
	<select id="selectList" resultMap="BaseResultMap">
		select * from btools_role where 1=1
		<if test="role !=null"><!-- 判断对象是否为空 -->
			<if test="role.roleName != null and role.roleName !='' ">
				and role_name like
				"%"#{role.roleName,jdbcType=VARCHAR}"%"
			</if>
			<if test="role.companyId != null">
				<if test="role.companyId ==0">
					and company_id =0
				</if>
				<if test="role.companyId !=0">
					and (company_id =0 or
					company_id =
					#{role.companyId,jdbcType=BIGINT})
				</if>
			</if>
		</if>
		<if test="pageVo !=null"><!-- 判断pageVo对象是否为空 -->
			<if test="pageVo.sortField !=null  and pageVo.sortOrder !=null">
				order by
				${pageVo.sortField} ${pageVo.sortOrder}
			</if>
			<if test="pageVo.pageIndex >=0  and pageVo.pageSize >0">
				limit
				#{pageVo.pageIndex,jdbcType=INTEGER},#{pageVo.pageSize,jdbcType=INTEGER}
			</if>
		</if>
	</select>

	<!-- 查询某个公司下所有的角色以及角色下用户 -->
	<select id="selectAllUserAndRole" parameterType="java.lang.Integer"
		resultMap="RoleResultMap">
		select * from btools_role where (company_id =0 or
		company_id
		=#{companyId,jdbcType=BIGINT})
	</select>

	<select id="selectUserByRoleId" parameterType="java.lang.Integer"
		resultMap="UserResultMap">
		SELECT U.* FROM btools_role AS R RIGHT JOIN
		fusion_company_user_role AS UR ON R.role_id = UR.role_id RIGHT JOIN
		fusion_company_user AS U ON UR.user_id = U.user_id
		WHERE R.role_id =
		#{roleId,jdbcType=BIGINT}
	</select>
	<!-- 批量删除用户信息 -->
	<delete id="deleteRoleByKey" parameterType="java.util.List">
		delete from btools_role where role_id in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>
</mapper>