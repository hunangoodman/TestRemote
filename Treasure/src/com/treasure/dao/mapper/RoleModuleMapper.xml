<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.treasure.dao.RoleModuleMapper">
	<resultMap id="BaseResultMap" type="com.treasure.model.RoleModule">
		<id column="role_module_id" property="roleModuleId" jdbcType="BIGINT" />
		<result column="role_id" property="roleId" jdbcType="BIGINT" />
		<result column="module_id" property="moduleId" jdbcType="INTEGER" />
		<result column="function_id" property="functionId" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="RoleModuleResultMap" type="com.treasure.model.RoleModule">
		<id column="role_module_id" property="roleModuleId" jdbcType="BIGINT" />
		<result column="role_id" property="roleId" jdbcType="BIGINT" />
		<result column="module_id" property="moduleId" jdbcType="INTEGER" />
		<result column="function_id" property="functionId" jdbcType="INTEGER" />
		<collection property="function" select="selectFunctionByModule"
			column="function_id" ofType="com.treasure.model.Function"></collection>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		role_module_id, role_id, module_id, function_id
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.treasure.model.RoleModuleExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from btools_role_module
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from btools_role_module
		where role_module_id =
		#{roleModuleId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		btools_role_module
		where role_module_id =
		#{roleModuleId,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.treasure.model.RoleModuleExample">
		delete from btools_role_module
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.treasure.model.RoleModule">
		insert into
		btools_role_module
		(role_module_id, role_id,
		module_id,
		function_id)
		values
		(#{roleModuleId,jdbcType=BIGINT},
		#{roleId,jdbcType=BIGINT},
		#{moduleId,jdbcType=INTEGER},
		#{functionId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.treasure.model.RoleModule">
		insert into btools_role_module
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleModuleId != null">
				role_module_id,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
			<if test="moduleId != null">
				module_id,
			</if>
			<if test="functionId != null">
				function_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleModuleId != null">
				#{roleModuleId,jdbcType=BIGINT},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=BIGINT},
			</if>
			<if test="moduleId != null">
				#{moduleId,jdbcType=INTEGER},
			</if>
			<if test="functionId != null">
				#{functionId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.treasure.model.RoleModuleExample"
		resultType="java.lang.Integer">
		select count(*) from btools_role_module
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update btools_role_module
		<set>
			<if test="record.roleModuleId != null">
				role_module_id = #{record.roleModuleId,jdbcType=BIGINT},
			</if>
			<if test="record.roleId != null">
				role_id = #{record.roleId,jdbcType=BIGINT},
			</if>
			<if test="record.moduleId != null">
				module_id = #{record.moduleId,jdbcType=INTEGER},
			</if>
			<if test="record.functionId != null">
				function_id = #{record.functionId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update btools_role_module
		set role_module_id =
		#{record.roleModuleId,jdbcType=BIGINT},
		role_id =
		#{record.roleId,jdbcType=BIGINT},
		module_id =
		#{record.moduleId,jdbcType=INTEGER},
		function_id =
		#{record.functionId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.treasure.model.RoleModule">
		update btools_role_module
		<set>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=BIGINT},
			</if>
			<if test="moduleId != null">
				module_id = #{moduleId,jdbcType=INTEGER},
			</if>
			<if test="functionId != null">
				function_id = #{functionId,jdbcType=INTEGER},
			</if>
		</set>
		where role_module_id = #{roleModuleId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.treasure.model.RoleModule">
		update
		btools_role_module
		set role_id = #{roleId,jdbcType=BIGINT},
		module_id =
		#{moduleId,jdbcType=INTEGER},
		function_id =
		#{functionId,jdbcType=INTEGER}
		where role_module_id =
		#{roleModuleId,jdbcType=BIGINT}
	</update>
	<select id="selectRoleModuleByRole" resultMap="RoleModuleResultMap">
		SELECT DISTINCT *
		FROM btools_role_module WHERE role_id IN (
		SELECT DISTINCT ur.role_id
		FROM btools_user_role ur WHERE ur.user_id = #{nid,jdbcType=BIGINT} )
		GROUP BY module_id, function_id
	</select>
	<select id="selectFunctionByModule" parameterType="java.lang.Integer"
		resultType="com.treasure.model.Function">
		select
		function_id,type,code from btools_function
		where
		function_id =#{functionId,jdbcType=INTEGER}
	</select>
	<!-- 根据角色编号，先删除已分配资源 -->
	<delete id="deleteRoleModuleByRole">
		delete from
		btools_role_module
		where
		role_id=#{roleId,jdbcType=INTEGER}
	</delete>
	<!-- 批量插入 -->
	<insert id="saveRoleModule">
		insert into btools_role_module (role_id, module_id,
		function_id)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.roleId,jdbcType=INTEGER},
			#{item.moduleId,jdbcType=INTEGER},
			#{item.functionId,jdbcType=INTEGER})
		</foreach>
	</insert>
	<delete id="deleteRoleModuleByKey" parameterType="java.util.List">
		delete from btools_role_module where role_id in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>
</mapper>