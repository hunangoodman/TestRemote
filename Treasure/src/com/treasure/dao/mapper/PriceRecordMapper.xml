<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.treasure.dao.PriceRecordMapper">
	<resultMap id="BaseResultMap" type="com.treasure.model.PriceRecord">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="record_date" property="recordDate" jdbcType="DATE" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="amplitude" property="amplitude" jdbcType="DOUBLE" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, record_date, price, amplitude
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.treasure.model.PriceRecordExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from treasure_price_record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from treasure_price_record
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		treasure_price_record
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.treasure.model.PriceRecordExample">
		delete from treasure_price_record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.treasure.model.PriceRecord">
		insert into
		treasure_price_record (id, record_date, price,
		amplitude)
		values
		(#{id,jdbcType=BIGINT}, #{recordDate,jdbcType=DATE},
		#{price,jdbcType=DOUBLE},
		#{amplitude,jdbcType=DOUBLE})
	</insert>
	<insert id="insertSelective" parameterType="com.treasure.model.PriceRecord">
		insert into treasure_price_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="recordDate != null">
				record_date,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="amplitude != null">
				amplitude,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="recordDate != null">
				#{recordDate,jdbcType=DATE},
			</if>
			<if test="price != null">
				#{price,jdbcType=DOUBLE},
			</if>
			<if test="amplitude != null">
				#{amplitude,jdbcType=DOUBLE},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.treasure.model.PriceRecordExample"
		resultType="java.lang.Integer">
		select count(*) from treasure_price_record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update treasure_price_record
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.recordDate != null">
				record_date = #{record.recordDate,jdbcType=DATE},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DOUBLE},
			</if>
			<if test="record.amplitude != null">
				amplitude = #{record.amplitude,jdbcType=DOUBLE},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update treasure_price_record
		set id = #{record.id,jdbcType=BIGINT},
		record_date = #{record.recordDate,jdbcType=DATE},
		price =
		#{record.price,jdbcType=DOUBLE},
		amplitude =
		#{record.amplitude,jdbcType=DOUBLE}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.treasure.model.PriceRecord">
		update treasure_price_record
		<set>
			<if test="recordDate != null">
				record_date = #{recordDate,jdbcType=DATE},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DOUBLE},
			</if>
			<if test="amplitude != null">
				amplitude = #{amplitude,jdbcType=DOUBLE},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.treasure.model.PriceRecord">
		update
		treasure_price_record
		set record_date = #{recordDate,jdbcType=DATE},
		price = #{price,jdbcType=DOUBLE},
		amplitude =
		#{amplitude,jdbcType=DOUBLE}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectPrices" resultMap="BaseResultMap">
		select * from treasure_price_record where 1=1
		<if test="record != null">
			<if test="record.startDate !=null and record.startDate !=''">
				<![CDATA[ and record_date >= #{record.startDate,jdbcType=VARCHAR} ]]>
			</if>
			<if test="record.endDate !=null and record.endDate !=''">
				<![CDATA[ and record_date <= #{record.endDate,jdbcType=VARCHAR} ]]>
			</if>
		</if>
		order by record_date ASC
	</select>
</mapper>